#!/bin/bash
# Time-stamp: <2011-10-17 16:58:23 rueffer>
# (c) Bjoern Rueffer 2011

# simple check for parameter validity:
if [ ! -f "$1" -o $# -eq 0 ]; then
    if [ "$1" = -clean ]; then
	echo Erasing all tagged files...
	rm -i $(find . | sed -ne '/_[0-9a-f]\{7\}\./p' | tr '\n' ' ')
	exit 0
    else    
	cat <<EOF
Usage:  $0 <files> OR $0 -clean

In the first form this command will take files located in a git
repository and watermark them with the current commit id.  The
original files will remain untouched, and copies with the commit id
appended to the filenames will be created.  For pdf files the
watermark will be placed on top of each PDF page.  For tex and bbl
files it will be added to the head of the file as a comment line. In
this case any existing such watermarks will be replaced.  Other file
types are currently not supported.

In the second form this command will interactively delete all files
that seem to have been generated by this program.

(c) Bjoern Rueffer 2011
EOF
	exit 1
    fi
elif ! git describe --always >/dev/null 2>&1; then
    cat <<EOF
Error: This command must be invoked in a git repository!
(Otherwise I cannot know which commit ID to use.)
EOF
    exit 1
fi



function watermark () {
    if !(echo "$1" | grep -i 'PDF\|TEX\|BBL$' >/dev/null 2>&1); then 
	cat <<EOF
Error: The file $1 appears not to be PDF, TEX, or BBL format. 
I can only process these file types.
EOF
	exit 1
    fi

    COMMITID=`git describe --always --abbrev=7`
    cp "$1" /tmp/pdf_to_stamp.pdf
    FILENAME=$(echo "$1" | sed -e 's/\(_[0-9a-f]\{7\}\)*//g')
    OUTFILE=$(echo "$FILENAME" | sed -e 's/\(.*\)\.\(...\)$/\1_'$COMMITID'.\2/')
    
    echo -n Processing "$1" with git commit ID `git describe --always`, producing $OUTFILE ...

    if (echo "$1" | grep -i 'PDF$' >/dev/null 2>&1); then 
	cat >/tmp/commitid.tex <<EOF
\documentclass{scrlttr2}
\usepackage{pdfpages,pgf,tikz}
\pagestyle{empty}
\begin{document}
\includepdf[fitpaper,pages=-,%
picturecommand={},%
pagecommand={%
  \begin{tikzpicture}[remember picture, overlay]
    \node [xshift=1cm,yshift=-1cm,below right, fill=yellow!50, rounded corners, opacity=.8] at (current page.north west) {%
      commit id: $COMMITID \qquad \today \qquad p.\thepage
    };
  \end{tikzpicture}%
}%
]{/tmp/pdf_to_stamp.pdf}
\end{document}
EOF
	(cd /tmp; pdflatex commitid && pdflatex commitid) >/dev/null 2>&1
	cp /tmp/commitid.pdf "$OUTFILE"
	rm /tmp/commitid*
    elif (echo "$1" | grep -i 'TEX\|BBL$' >/dev/null 2>&1); then
	cp "$1" /tmp/commitid.txt
	if (head -n 2 /tmp/commitid.txt | tail -n 1 | grep "GIT COMMIT ID" ); then
	    sed -ne '4,$p' /tmp/commitid.txt > /tmp/commitid.txt2
	    mv /tmp/commitid.txt2 /tmp/commitid.txt
	fi
	(printf "%%\n%% GIT COMMIT ID $COMMITID\n%%\n"; cat /tmp/commitid.txt) > $OUTFILE
	rm /tmp/commitid*
    fi
    echo \ done.
}

while [ $# -gt 0 ]; do
    watermark "$1"
    shift
done
